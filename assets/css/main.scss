---
# Only the main Sass file needs front matter (the dashes are enough)
search: false
---

@charset "utf-8";

@import "minimal-mistakes/skins/{{ site.minimal_mistakes_skin | default: 'default' }}"; // skin
@import "minimal-mistakes"; // main partials


/*
Override any CSS with new CSS styles AFTER the `@import "minimal-mistakes";` line just above.
See https://github.com/mmistakes/minimal-mistakes/issues/1219#issuecomment-326809412
Anything you place after this point will therefore "cascade and override" the previous CSS styles.
*/

/*
Decrease font sizes of the entire website.
Default values for small, medium, large, and x-large screens are: 16, 18, 20, and 22px. 
All other font sizes are "em" [typography unit](https://en.wikipedia.org/wiki/Em_(typography)) multipliers of these pixel (px) values, 
and are therefore relative to and changed by these singular pixel values.
See: https://github.com/mmistakes/minimal-mistakes/issues/1219#issuecomment-326809412
- It looks like the screen pixel sizes to move into each new "size" category are defined in
  the "Breakpoints" section of "_variables.scss"?
*/
html {
  font-size: 11px; // change to whatever
  @include breakpoint($medium) {
    font-size: 12px; // change to whatever
  }
  @include breakpoint($large) {
    font-size: 14px; // change to whatever
  }
  @include breakpoint($x-large) {
    font-size: 16px; // change to whatever
  }
}


/* Increase base font size */
body {
    font-size: 18px; /* Increase the base font size (default might be 16px) */
    line-height: 1.6; /* Adjust line height for better readability */
}

/* Specific adjustments to headers */
h1, h2, h3 {
    font-size: 1.2em; /* Increase header sizes as needed */
}

/* Adjust paragraph font size */
p {
    font-size: 1.1em; /* Adjust font size for paragraphs */
}

/*
Change size of profile avatar in left sidebar
*/
@media (min-width: 80em) {
.author__avatar {
  display: table-cell;
  vertical-align: top;
  width: 100px;
  height: 100px;
  @include breakpoint($large) {
    display: block;
    width: auto;
    height: auto;
  }
  img {
    max-width: 250px;
    border-radius: 50%;
    @include breakpoint($large) {
      padding: 5px;
      border: 1px solid $border-color;
    }
  }
}
}


// Accessibility code snippets
code { padding: .25em .5em; font-size: 85%; color: #C04343; background-color: #F9F9F9; border-radius: 3px; }
/* Literal.Number */
.highlight .s { color: #C04343; }
/* Literal.String */
.highlight .na { color: #8B38D1; }
/* Name.Function */
.highlight .nl { color: #4467E9; }
/* Name.Namespace */
.highlight .nt { color: #2771B9; }
/* Literal.Number */
.highlight .m { color: #A46123; }
/* Text.Whitespace */
.highlight .mf { color: #A46123; }
/* Literal.Number.Float */
.highlight .mh { color: #A46123; }
/* Literal.Number.Hex */
.highlight .mi { color: #A46123; }
/* Literal.Number.Integer */
.highlight .mo { color: #A46123; }
/* Name.Attribute */
.highlight .nb { color: #4E7450; }

.highlight .n  { color: #4E7450; }
/* Comment.Preproc */
.highlight .c1 { color: #707070; }
/* Comment.Single */
.highlight .cs { color: #707070; }

.highlight .c  { color: #707070; }
/* Name.Builtin */
.highlight .nc { color: #008538; }
